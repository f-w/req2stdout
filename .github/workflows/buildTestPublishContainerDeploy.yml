name: buildTestPublishContainerDeploy
on:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:
  workflow_dispatch:
env:
  req2stdoutContainerTag: latest
jobs:
  publish-container:
    if: ${{ github.repository == 'f-w/req2stdout' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Update req2stdoutContainerTag for tags
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: echo req2stdoutContainerTag=$(echo $GITHUB_REF | cut -d / -f 3 | cut -d v -f 2- | cut -d . -f 1,2) >> $GITHUB_ENV
      - name: Update req2stdoutContainerTag for branches
        if: ${{ startsWith(github.ref, 'refs/heads/') && github.ref != 'refs/heads/main' }}
        run: echo req2stdoutContainerTag=$(echo $GITHUB_REF | cut -d / -f 3) >> $GITHUB_ENV
      - name: Save $req2stdoutContainerTag to file
        run: |
          echo $req2stdoutContainerTag > req2stdoutContainerTag.txt
      - name: Upload req2stdoutContainerTag
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        uses: actions/upload-artifact@v4
        with:
          name: req2stdoutContainerTag
          path: req2stdoutContainerTag.txt
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Container 🚀
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/f-w/req2stdout:${{ env.req2stdoutContainerTag }}
          build-args: nodeVersion=${{ vars.NODE_VERSION }}
  deploy:
    if: ${{ github.repository == 'f-w/req2stdout' && github.event_name == 'push' }}
    needs: publish-container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install oc
        uses: redhat-actions/oc-installer@v1
      - name: Authenticate to OCP4 and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_API_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_PROJECT }}-prod
      - name: Download req2stdoutContainerTag
        uses: actions/download-artifact@v4
        with:
          name: req2stdoutContainerTag
      - name: helm upgrade 🚀
        run: |
          export req2stdoutContainerTag=`cat req2stdoutContainerTag.txt`
          helm upgrade --set image.tag="$req2stdoutContainerTag" req2stdout helm
          oc rollout restart deployment.apps/req2stdout
